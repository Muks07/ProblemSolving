public class LongestCommonSubsequence {
	
	
public int logestCommon(char[] arr1,char[] arr2) {
	
	if(arr1==null || arr2==null) {
		return 0;
	}
	int len1=arr1.length;
	int len2=arr2.length;
	int max=0;
	int[][] matrix=new int[len2+1][len1+1];
	for(int i=1;i<matrix.length;i++ ) {
		for(int j=1;j<matrix[0].length;j++) {
			
			if(arr2[i-1]==arr1[j-1]) {
				matrix[i][j]=matrix[i-1][j-1]+1;
			}
			if(arr2[i-1]!=arr1[j-1]) {
				matrix[i][j]=max(matrix[i-1][j],matrix[i][j-1]);
			}
		}
		
	}
	return matrix[matrix.length-1][matrix[0].length-1];
}

private int max(int a,int b) {
	return (a>b)?a:b;
}
public static void main(String[] args) {
	LongestCommonSubsequence obj=new LongestCommonSubsequence();
	String s1="ABCDGHLQR";
	String s2="GA";
	System.out.println(obj.logestCommon(s1.toCharArray(), s2.toCharArray()));
}

}
