package com.microsoft.interview;

import java.util.LinkedList;
import java.util.Queue;

public class CheckItBinaryTreeOrNot {

	static Node root;
	public static boolean isBST(Node root) {
		if(root==null) {
			return false;
		}
		Queue<Node> queue=new LinkedList<>();
		queue.add(root);
		Node n=null;
		while(!queue.isEmpty()) {
			n=queue.poll();
			if(n.left!=null) {
				if(n.left.data>n.data) {
					return false;
				}
				queue.offer(n.left);
			}
			if(n.right!=null) {
				if(n.right.data<n.data) {
					return false;
				}
				queue.offer(n.right);
			}
			
		}
		return true;
	}
	public static void main(String[] args) {
		root=new Node(5);
		root.left=new Node(3);
		root.right=new Node(7);
		root.left.right=new Node(4);
		root.left.left=new Node(4);
		root.right.right=new Node(10);
		System.out.println("Tree is BST: "+isBST(root));
	}
}
class Node{
	Node left,right;
	int data;
	public Node(int data) {
		this.data=data;
		left=right=null;
	}
}
	
	

