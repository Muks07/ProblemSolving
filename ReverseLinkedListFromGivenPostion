package com.demo.linkedlist;

import java.util.Stack;

public class ReverseLinkedListFromAPosition {
static Node head;
	static Node reverseFromANode(Node head,int from) {
		if(head==null) {
			return head;
		}
		Node cur=head;
		Node reverseFrom=null;
		int count=1;
		Stack<Node> st=new Stack<Node>();
		while(cur!=null) {
			if(count==from-1) {
				reverseFrom=cur;
				count++;
				cur=cur.next;
				
				}
			if(count>=from) {
				st.push(cur);
				count++;
				cur=cur.next;
			}
			else {
			count++;
			cur=cur.next;
			}
		}		
		while(!st.isEmpty()){
			reverseFrom.next=st.pop();
			reverseFrom=reverseFrom.next;
		}
		reverseFrom.next=null;
		return head;
	}
	static void print(Node head) {
		if(head==null) {
			return;
		}
		while(head!=null) {
				System.out.print(head.data+" ->");
				head=head.next;

		}
	}
	public static void main(String[] args) {
		head=new Node(2);
		head.next=new Node(3);
		head.next.next=new Node(4);
		head.next.next.next=new Node(5);
		head.next.next.next.next=new Node(6);
		head.next.next.next.next.next=new Node(7);
		print(head);
		System.out.println("=================");
		Node n=reverseFromANode(head, 5);
		print(n);
		
		
	}
}
